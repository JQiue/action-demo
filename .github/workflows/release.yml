name: Release

permissions:
  contents: write

on:
  release:
    types: [created]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          # Ubuntu 20 glibc 静态链接
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
            libc: glibc-static
            extra_build_args: -C target-feature=+crt-static
          # Ubuntu latest musl 静态链接
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            libc: musl-static
            extra_build_args: -C target-feature=+crt-static
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install musl dependencies
        if: matrix.libc == 'musl-static'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools musl-dev
          rustup target add x86_64-unknown-linux-musl
      - name: Setup static linking
        if: contains(matrix.libc, 'static')
        run: |
          echo '[target.x86_64-unknown-linux-gnu]' >> ~/.cargo/config.toml
          echo 'linker = "musl-gcc"' >> ~/.cargo/config.toml
          echo 'rustflags = ["${{ matrix.extra_build_args }}"]' >> ~/.cargo/config.toml
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: action-demo
          target: ${{ matrix.target }}
          tar: unix
          zip: windows
          include: README.md
          archive: $bin-$tag-$target-${{ matrix.libc}}
          token: ${{ secrets.GITHUB_TOKEN }}
